apiVersion: kubeflow.org/v2beta1
kind: MPIJob
metadata:
  name: {{ job_name }}
spec:
  slotsPerWorker: 1
  runPolicy:
    cleanPodPolicy: Running
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        spec:
          containers:
            - image: {{ image }}
              name: mnist-launcher
              env:
                - name: DATA_PATH
                  value: /app/data
                - name: WANDB_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: wandb-secret
                      key: WANDB_API_KEY
              envFrom:
                - secretRef:
                    name: aws-creds
              command:
                - bash
                - -c
                - |
                  export MASTER_ADDR=$(awk 'NR==1{print $1}' /etc/mpi/hostfile)

                  echo "Launcher using MASTER_ADDR=$MASTER_ADDR"

                  python src/download_cifar10_dataset.py

                  mpirun --allow-run-as-root \
                    --tag-output \
                    -mca plm_rsh_args "-o StrictHostKeyChecking=no" \
                    -x MASTER_ADDR \
                    -x DATA_PATH \
                    -x WANDB_API_KEY \
                    python {{ script }}
              volumeMounts:
                - name: dataset
                  mountPath: /app/data
          volumes:
            - name: dataset
              persistentVolumeClaim:
                claimName: mnist-pvc

    Worker:
      replicas: {{ num_workers }}
      template:
        metadata:
          labels:
            app: ml-training-metrics
        spec:
          containers:
            - image: {{ image }}
              name: mnist-worker
              ports:
                - containerPort: 8001
                  name: metrics
              volumeMounts:
                - name: dataset
                  mountPath: /app/data
                - name: config
                  mountPath: /app/config.yaml
                  subPath: config.yaml
              resources:
                limits:
                  nvidia.com/gpu: {{ num_gpus }}
          volumes:
            - name: dataset
              persistentVolumeClaim:
                claimName: mnist-pvc
            - name: config
              configMap:
                name: job-config